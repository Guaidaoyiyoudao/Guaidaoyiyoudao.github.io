[{"title":"libevent源码阅读篇(一)","url":"/2022/07/17/libevent源码阅读篇-一/","content":"\n# libevent使用\n\n在了解libevent的源码之前，首先看一下libevent的基本使用方法\n\n## libevent版HelloWorld\n\n\n","tags":["网络编程","源码分析","libevent"],"categories":["libevent"]},{"title":"socket基础","url":"/2022/07/17/socket/","content":"\n# socket\n\n## 服务端\n\n服务端的编程大致如下：\n```c++\nsocket()\nbind()\nlisten()\naccept()\n```\n### socket()\n\nsocket用于创建一个套接字，有三个参数\n- famility\n    - 协议族，基本是都用`AF_INET`\n- protocol\n    - 协议，要么TCP:`SOCKET_STREAM`或者UDP:`SOCKET_DGRAM`","tags":["linux","网络编程"]},{"title":"Hello World","url":"/2022/07/17/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]